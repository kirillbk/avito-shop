services:
  avito-shop-service:
    container_name: avito-shop-service
    build:
      context: .
    environment:
      SERVER_PORT: ${SERVER_PORT}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_TOKEN_EXPIRE_MINUTES: ${JWT_TOKEN_EXPIRE_MINUTES}
      JWT_ALGORITHM: ${JWT_ALGORITHM}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER} 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}

    command: ["bash", "-c", "alembic upgrade head && fastapi run app/main.py --host 0.0.0.0 --port ${SERVER_PORT}"]
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
    networks:
      - internal
  db:
    image: postgres:17.2
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - internal

networks:
  internal:

volumes:
  pgdata:
